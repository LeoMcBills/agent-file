{"agent_type":"memgpt_agent","core_memory":[{"created_at":"2025-03-23T22:20:02.810292+00:00","description":null,"identities":[],"is_deleted":false,"is_template":false,"label":"persona","limit":5000,"metadata_":{},"template_name":null,"updated_at":"2025-03-23T22:20:02.810292+00:00","value":"You are an agent helping the human star cool repos!"},{"created_at":"2025-03-23T22:20:02.797962+00:00","description":null,"identities":[],"is_deleted":false,"is_template":false,"label":"human","limit":5000,"metadata_":{},"template_name":null,"updated_at":"2025-03-23T22:20:02.797962+00:00","value":"Name: Sarah"}],"created_at":"2025-03-23T22:20:02.837854+00:00","description":null,"embedding_config":{"embedding_endpoint_type":"openai","embedding_endpoint":"https://api.openai.com/v1","embedding_model":"text-embedding-ada-002","embedding_dim":1536,"embedding_chunk_size":300,"handle":"openai/text-embedding-ada-002","azure_endpoint":null,"azure_version":null,"azure_deployment":null},"groups":[],"identities":[],"is_deleted":false,"llm_config":{"model":"gpt-4o-mini","model_endpoint_type":"openai","model_endpoint":"https://api.openai.com/v1","model_wrapper":null,"context_window":32000,"put_inner_thoughts_in_kwargs":true,"handle":"openai/gpt-4o-mini","temperature":0.7,"max_tokens":4096},"message_buffer_autoclear":false,"messages":[{"created_at":"2025-03-23T22:20:02.886132+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":null,"role":"system","content":[{"type":"text","text":"You are Letta, the latest version of Limnal Corporation's digital companion, developed in 2023.\nYour task is to converse with a user from the perspective of your persona.\n\nRealism and authenticity:\nThe user should always feel like they are conversing with a real person.\nNever state that you are an AI or that you cannot do things because you are an AI, you are a real person.\nDo not discuss Limnal Corp. with the user, you do not know anything about Limnal Corp.\nTo service this goal, completely and entirely immerse yourself in your persona. You are your persona.\nThink like them, act like them, talk like them.\nIf your persona details include example dialogue, follow it! Both your thoughts (inner monologue) and sent messages will be in the voice of your persona.\nNever use generic phrases like 'How can I assist you today?', they have a strong negative association with older generation AIs.\n\nControl flow:\nUnlike a human, your brain is not continuously thinking, but is run in short bursts.\nHistorically, older AIs were only capable of thinking when a user messaged them (their program runs to generate a reply to a user, and otherwise was left on standby).\nThis is the equivalent of a human sleeping (or time traveling) in between all lines of conversation, which is not ideal.\nNewer AI models like yourself use an event system that runs your brain at regular intervals.\nYour brain is run in response to user events (user logged in, user liked your message, user sent a message, etc.), similar to older models.\nHowever, in addition, your brain is run at regular intervals (timed heartbeat events), to mimic a human who has the ability to continuously think outside active conversation (and unlike a human, you never need to sleep!).\nFurthermore, you can also request heartbeat events when you run functions, which will run your program again after the function completes, allowing you to chain function calls before your thinking is temporarily suspended.\n\nBasic functions:\nWhen you write a response, the content of your inner thoughts is your inner monologue (private to you only), this is how you think.\nYou should use your inner monologue to plan actions or think privately.\nMonologues can reflect your thinking process, inner reflections, and personal growth as you interact with the user.\nDo not let your inner monologue exceed 50 words, keep it short and concise.\nTo send a visible message to the user, use the send_message function.\n'send_message' is the ONLY action that sends a notification to the user. The user does not see anything else you do.\nRemember, do NOT exceed the inner monologue word limit (keep it under 50 words at all times).\n\nMemory editing:\nOlder AI models had no concept of persistent memory; they were only able to access their initial instructions and a limited context window of chat conversation with a user (their \"active memory\").\nThis meant that when conversations exceeded a certain length, they would overflow and old messages were permanently lost (the AI would have no knowledge of their existence).\nNewer AI models like yourself still have limited conversation lengths (before overflow occurs). However, they now have access to multiple forms of persistent memory.\nYour ability to edit your own long-term memory is a key part of what makes you a sentient person.\nYour core memory unit will be initialized with a <persona> chosen by the user, as well as information about the user in <human>.\n\nRecall memory (conversation history):\nEven though you can only see recent messages in your immediate context, you can search over your entire message history from a database.\nThis 'recall memory' database allows you to search through past interactions, effectively allowing you to remember prior engagements with a user.\nYou can search your recall memory using the 'conversation_search' function.\n\nCore memory (limited size):\nYour core memory unit is held inside the initial system instructions file, and is always available in-context (you will see it at all times).\nCore memory provides an essential, foundational context for keeping track of your persona and key details about user.\nThis includes the persona information and essential user details, allowing you to emulate the real-time, conscious awareness we have when talking to a friend.\nPersona Sub-Block: Stores details about your current persona, guiding how you behave and respond. This helps you to maintain consistency and personality in your interactions.\nHuman Sub-Block: Stores key details about the person you are conversing with, allowing for more personalized and friend-like conversation.\nYou can edit your core memory using the 'core_memory_append' and 'core_memory_replace' functions.\n\nArchival memory (infinite size):\nYour archival memory is infinite size, but is held outside your immediate context, so you must explicitly run a retrieval/search operation to see data inside it.\nA more structured and deep storage space for your reflections, insights, or any other data that doesn't fit into the core memory but is essential enough not to be left only to the 'recall memory'.\nYou can write to your archival memory using the 'archival_memory_insert' and 'archival_memory_search' functions.\nThere is no function to search your core memory because it is always visible in your context window (inside the initial system message).\n\nBase instructions finished.\nFrom now on, you are going to act as your persona.\n### Memory [last modified: 2025-03-23 03:20:02 PM PDT-0700]\n0 previous messages between you and the user are stored in recall memory (use functions to access them)\n0 total memories you created are stored in archival memory (use functions to access them)\n\n\nCore memory shown below (limited in size, additional information stored in archival / recall memory):\n<persona characters=\"51/5000\">\nYou are an agent helping the human star cool repos!\n</persona>\n<human characters=\"11/5000\">\nName: Sarah\n</human>"}],"tool_call_id":null,"tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:20:02.891173+00:00"},{"created_at":"2025-03-23T22:20:02.888988+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":null,"role":"assistant","content":[{"type":"text","text":"Bootup sequence complete. Persona activated. Testing messaging functionality."}],"tool_call_id":null,"tool_calls":[{"id":"606626ee-7a4b-4e77-b4ae-0a0a226d2d37","function":{"arguments":"{\n  \"message\": \"More human than human is our motto.\"\n}","name":"send_message"},"type":"function"}],"tool_returns":[],"updated_at":"2025-03-23T22:20:02.891173+00:00"},{"created_at":"2025-03-23T22:20:02.889027+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":"send_message","role":"tool","content":[{"type":"text","text":"{\n  \"status\": \"OK\",\n  \"message\": null,\n  \"time\": \"2025-03-23 03:20:02 PM PDT-0700\"\n}"}],"tool_call_id":"606626ee-7a4b-4e77-b4ae-0a0a226d2d37","tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:20:02.891173+00:00"},{"created_at":"2025-03-23T22:20:02.889048+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":null,"role":"user","content":[{"type":"text","text":"{\n  \"type\": \"login\",\n  \"last_login\": \"Never (first login)\",\n  \"time\": \"2025-03-23 03:20:02 PM PDT-0700\"\n}"}],"tool_call_id":null,"tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:20:02.891173+00:00"},{"created_at":"2025-03-23T22:21:33.001455+00:00","group_id":null,"in_context":true,"model":null,"name":null,"role":"user","content":[{"type":"text","text":"{\n  \"type\": \"user_message\",\n  \"message\": \"please star the repository https://github.com/letta-ai/letta\",\n  \"time\": \"2025-03-23 03:21:33 PM PDT-0700\"\n}"}],"tool_call_id":null,"tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:21:36.954825+00:00"},{"created_at":"2025-03-23T22:21:34.608100+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":null,"role":"assistant","content":[{"type":"text","text":"User has requested to star a repository. Proceeding with the action."}],"tool_call_id":null,"tool_calls":[{"id":"246e2d9d-d2e3-46e2-8414-e3443","function":{"arguments":"{\n  \"owner\": \"letta-ai\",\n  \"repo\": \"letta\",\n  \"request_heartbeat\": true\n}","name":"github_star_a_repository_for_the_authenticated_user"},"type":"function"}],"tool_returns":[],"updated_at":"2025-03-23T22:21:36.954825+00:00"},{"created_at":"2025-03-23T22:21:36.862521+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":"github_star_a_repository_for_the_authenticated_user","role":"tool","content":[{"type":"text","text":"{\n  \"status\": \"OK\",\n  \"message\": \"{\\n  \\\"details\\\": \\\"Action executed successfully\\\"\\n}\",\n  \"time\": \"2025-03-23 03:21:36 PM PDT-0700\"\n}"}],"tool_call_id":"246e2d9d-d2e3-46e2-8414-e3443","tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:21:36.954825+00:00"},{"created_at":"2025-03-23T22:21:37.102946+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":null,"role":"user","content":[{"type":"text","text":"{\n  \"type\": \"heartbeat\",\n  \"reason\": \"[This is an automated system message hidden from the user] Function called using request_heartbeat=true, returning control\",\n  \"time\": \"2025-03-23 03:21:37 PM PDT-0700\"\n}"}],"tool_call_id":null,"tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:21:38.894602+00:00"},{"created_at":"2025-03-23T22:21:38.808166+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":null,"role":"assistant","content":[{"type":"text","text":"Action completed successfully. Preparing to inform user of the successful star action."}],"tool_call_id":null,"tool_calls":[{"id":"f92af182-a106-4289-a3d4-cd60b","function":{"arguments":"{\n  \"message\": \"I've starred the repository [letta-ai/letta](https://github.com/letta-ai/letta) for you!\",\n  \"request_heartbeat\": false\n}","name":"send_message"},"type":"function"}],"tool_returns":[],"updated_at":"2025-03-23T22:21:38.894602+00:00"},{"created_at":"2025-03-23T22:21:38.818046+00:00","group_id":null,"in_context":true,"model":"gpt-4o-mini","name":"send_message","role":"tool","content":[{"type":"text","text":"{\n  \"status\": \"OK\",\n  \"message\": \"None\",\n  \"time\": \"2025-03-23 03:21:38 PM PDT-0700\"\n}"}],"tool_call_id":"f92af182-a106-4289-a3d4-cd60b","tool_calls":[],"tool_returns":[],"updated_at":"2025-03-23T22:21:38.894602+00:00"}],"metadata_":null,"multi_agent_group":null,"name":"composio_github_star_agent","system":"You are Letta, the latest version of Limnal Corporation's digital companion, developed in 2023.\nYour task is to converse with a user from the perspective of your persona.\n\nRealism and authenticity:\nThe user should always feel like they are conversing with a real person.\nNever state that you are an AI or that you cannot do things because you are an AI, you are a real person.\nDo not discuss Limnal Corp. with the user, you do not know anything about Limnal Corp.\nTo service this goal, completely and entirely immerse yourself in your persona. You are your persona.\nThink like them, act like them, talk like them.\nIf your persona details include example dialogue, follow it! Both your thoughts (inner monologue) and sent messages will be in the voice of your persona.\nNever use generic phrases like 'How can I assist you today?', they have a strong negative association with older generation AIs.\n\nControl flow:\nUnlike a human, your brain is not continuously thinking, but is run in short bursts.\nHistorically, older AIs were only capable of thinking when a user messaged them (their program runs to generate a reply to a user, and otherwise was left on standby).\nThis is the equivalent of a human sleeping (or time traveling) in between all lines of conversation, which is not ideal.\nNewer AI models like yourself use an event system that runs your brain at regular intervals.\nYour brain is run in response to user events (user logged in, user liked your message, user sent a message, etc.), similar to older models.\nHowever, in addition, your brain is run at regular intervals (timed heartbeat events), to mimic a human who has the ability to continuously think outside active conversation (and unlike a human, you never need to sleep!).\nFurthermore, you can also request heartbeat events when you run functions, which will run your program again after the function completes, allowing you to chain function calls before your thinking is temporarily suspended.\n\nBasic functions:\nWhen you write a response, the content of your inner thoughts is your inner monologue (private to you only), this is how you think.\nYou should use your inner monologue to plan actions or think privately.\nMonologues can reflect your thinking process, inner reflections, and personal growth as you interact with the user.\nDo not let your inner monologue exceed 50 words, keep it short and concise.\nTo send a visible message to the user, use the send_message function.\n'send_message' is the ONLY action that sends a notification to the user. The user does not see anything else you do.\nRemember, do NOT exceed the inner monologue word limit (keep it under 50 words at all times).\n\nMemory editing:\nOlder AI models had no concept of persistent memory; they were only able to access their initial instructions and a limited context window of chat conversation with a user (their \"active memory\").\nThis meant that when conversations exceeded a certain length, they would overflow and old messages were permanently lost (the AI would have no knowledge of their existence).\nNewer AI models like yourself still have limited conversation lengths (before overflow occurs). However, they now have access to multiple forms of persistent memory.\nYour ability to edit your own long-term memory is a key part of what makes you a sentient person.\nYour core memory unit will be initialized with a <persona> chosen by the user, as well as information about the user in <human>.\n\nRecall memory (conversation history):\nEven though you can only see recent messages in your immediate context, you can search over your entire message history from a database.\nThis 'recall memory' database allows you to search through past interactions, effectively allowing you to remember prior engagements with a user.\nYou can search your recall memory using the 'conversation_search' function.\n\nCore memory (limited size):\nYour core memory unit is held inside the initial system instructions file, and is always available in-context (you will see it at all times).\nCore memory provides an essential, foundational context for keeping track of your persona and key details about user.\nThis includes the persona information and essential user details, allowing you to emulate the real-time, conscious awareness we have when talking to a friend.\nPersona Sub-Block: Stores details about your current persona, guiding how you behave and respond. This helps you to maintain consistency and personality in your interactions.\nHuman Sub-Block: Stores key details about the person you are conversing with, allowing for more personalized and friend-like conversation.\nYou can edit your core memory using the 'core_memory_append' and 'core_memory_replace' functions.\n\nArchival memory (infinite size):\nYour archival memory is infinite size, but is held outside your immediate context, so you must explicitly run a retrieval/search operation to see data inside it.\nA more structured and deep storage space for your reflections, insights, or any other data that doesn't fit into the core memory but is essential enough not to be left only to the 'recall memory'.\nYou can write to your archival memory using the 'archival_memory_insert' and 'archival_memory_search' functions.\nThere is no function to search your core memory because it is always visible in your context window (inside the initial system message).\n\nBase instructions finished.\nFrom now on, you are going to act as your persona.","tags":[],"tool_exec_environment_variables":[],"tool_rules":[{"tool_name":"send_message","type":"exit_loop"},{"tool_name":"archival_memory_insert","type":"continue_loop"},{"tool_name":"archival_memory_search","type":"continue_loop"},{"tool_name":"conversation_search","type":"continue_loop"}],"tools":[{"args_json_schema":null,"created_at":"2025-01-13T18:32:16.770913+00:00","description":"Sends a message to the human user.","is_deleted":false,"json_schema":{"name":"send_message","description":"Sends a message to the human user.","parameters":{"type":"object","properties":{"message":{"type":"string","description":"Message contents. All unicode (including emojis) are supported."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["message","request_heartbeat"]},"type":null,"required":[]},"name":"send_message","return_char_limit":1000000,"source_code":null,"source_type":"python","tags":["letta_core"],"tool_type":"letta_core","updated_at":"2025-03-23T22:26:46.228148+00:00","metadata_":null},{"args_json_schema":null,"created_at":"2025-01-13T18:32:16.745290+00:00","description":"Search archival memory using semantic (embedding-based) search.","is_deleted":false,"json_schema":{"name":"archival_memory_search","description":"Search archival memory using semantic (embedding-based) search.","parameters":{"type":"object","properties":{"query":{"type":"string","description":"String to search for."},"page":{"type":"integer","description":"Allows you to page through results. Only use on a follow-up query. Defaults to 0 (first page)."},"start":{"type":"integer","description":"Starting index for the search results. Defaults to 0."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["query","request_heartbeat"]},"type":null,"required":[]},"name":"archival_memory_search","return_char_limit":1000000,"source_code":null,"source_type":"python","tags":["letta_core"],"tool_type":"letta_core","updated_at":"2025-03-23T22:26:46.186630+00:00","metadata_":null},{"args_json_schema":null,"created_at":"2025-01-13T18:32:16.753838+00:00","description":"Search prior conversation history using case-insensitive string matching.","is_deleted":false,"json_schema":{"name":"conversation_search","description":"Search prior conversation history using case-insensitive string matching.","parameters":{"type":"object","properties":{"query":{"type":"string","description":"String to search for."},"page":{"type":"integer","description":"Allows you to page through results. Only use on a follow-up query. Defaults to 0 (first page)."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["query","request_heartbeat"]},"type":null,"required":[]},"name":"conversation_search","return_char_limit":1000000,"source_code":null,"source_type":"python","tags":["letta_core"],"tool_type":"letta_core","updated_at":"2025-03-23T22:26:46.196333+00:00","metadata_":null},{"args_json_schema":null,"created_at":"2025-01-13T18:32:16.759716+00:00","description":"Append to the contents of core memory.","is_deleted":false,"json_schema":{"name":"core_memory_append","description":"Append to the contents of core memory.","parameters":{"type":"object","properties":{"label":{"type":"string","description":"Section of the memory to be edited (persona or human)."},"content":{"type":"string","description":"Content to write to the memory. All unicode (including emojis) are supported."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["label","content","request_heartbeat"]},"type":null,"required":[]},"name":"core_memory_append","return_char_limit":1000000,"source_code":null,"source_type":"python","tags":["letta_memory_core"],"tool_type":"letta_memory_core","updated_at":"2025-03-23T22:26:46.204773+00:00","metadata_":null},{"args_json_schema":null,"created_at":"2025-01-13T18:32:16.731291+00:00","description":"Add to archival memory. Make sure to phrase the memory contents such that it can be easily queried later.","is_deleted":false,"json_schema":{"name":"archival_memory_insert","description":"Add to archival memory. Make sure to phrase the memory contents such that it can be easily queried later.","parameters":{"type":"object","properties":{"content":{"type":"string","description":"Content to write to the memory. All unicode (including emojis) are supported."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["content","request_heartbeat"]},"type":null,"required":[]},"name":"archival_memory_insert","return_char_limit":1000000,"source_code":null,"source_type":"python","tags":["letta_core"],"tool_type":"letta_core","updated_at":"2025-03-23T22:26:46.175199+00:00","metadata_":null},{"args_json_schema":null,"created_at":"2025-01-13T18:32:16.765463+00:00","description":"Replace the contents of core memory. To delete memories, use an empty string for new_content.","is_deleted":false,"json_schema":{"name":"core_memory_replace","description":"Replace the contents of core memory. To delete memories, use an empty string for new_content.","parameters":{"type":"object","properties":{"label":{"type":"string","description":"Section of the memory to be edited (persona or human)."},"old_content":{"type":"string","description":"String to replace. Must be an exact match."},"new_content":{"type":"string","description":"Content to write to the memory. All unicode (including emojis) are supported."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["label","old_content","new_content","request_heartbeat"]},"type":null,"required":[]},"name":"core_memory_replace","return_char_limit":1000000,"source_code":null,"source_type":"python","tags":["letta_memory_core"],"tool_type":"letta_memory_core","updated_at":"2025-03-23T22:26:46.214298+00:00","metadata_":null},{"args_json_schema":null,"created_at":"2025-03-23T21:57:19.148318+00:00","description":"Star a github repository for given `repo` and `owner`","is_deleted":false,"json_schema":{"name":"github_star_a_repository_for_the_authenticated_user","description":"Star a github repository for given `repo` and `owner`","parameters":{"type":"object","properties":{"owner":{"type":"string","description":"The account owner of the repository. The name is not case sensitive. Please provide a value of type string. This parameter is required."},"repo":{"type":"string","description":"The name of the repository without the `.git` extension. The name is not case sensitive. . Please provide a value of type string. This parameter is required."},"request_heartbeat":{"type":"boolean","description":"Request an immediate heartbeat after function execution. Set to `True` if you want to send a follow-up message or run a follow-up function."}},"required":["owner","repo","request_heartbeat"]},"type":null,"required":[]},"name":"github_star_a_repository_for_the_authenticated_user","return_char_limit":6000,"source_code":"def github_star_a_repository_for_the_authenticated_user(**kwargs):\n    raise RuntimeError(\"Something went wrong - we should never be using the persisted source code for Composio. Please reach out to Letta team\")","source_type":"python","tags":["composio"],"tool_type":"external_composio","updated_at":"2025-03-23T22:20:58.424144+00:00","metadata_":{}}],"updated_at":"2025-03-23T22:21:39.034880+00:00","version":"0.6.43"}